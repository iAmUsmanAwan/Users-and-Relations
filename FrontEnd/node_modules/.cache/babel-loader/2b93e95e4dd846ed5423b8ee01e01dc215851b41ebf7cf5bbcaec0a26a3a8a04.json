{"ast":null,"code":"var _jsxFileName = \"E:\\\\MY_STUFF\\\\web_pages_practice\\\\junk\\\\User relationship App\\\\FrontEnd\\\\src\\\\components\\\\Relationships.js\",\n  _s = $RefreshSig$();\n// components/Relationships.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relationships = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [relationships, setRelationships] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n    fetchRelationships();\n  }, []);\n  const fetchUsers = async () => {\n    const response = await axios.get('http://localhost:8000/users/');\n    setUsers(response.data);\n  };\n  const fetchRelationships = async () => {\n    const response = await axios.get('http://localhost:8000/relationships/');\n    setRelationships(response.data);\n  };\n  const handleRelationship = async (user1Id, user2Id, relationship) => {\n    const payload = {\n      user1: user1Id,\n      user2: user2Id,\n      relationship\n    };\n    console.log(\"Sending payload:\", payload); // Debug log\n\n    try {\n      await axios.post('http://localhost:8000/relationships/', payload);\n      fetchRelationships(); // Refresh relationships after successful POST\n    } catch (error) {\n      console.error(\"Error creating relationship:\", error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" - \", user.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRelationship(user.id, 2, 'friend') // Example: user1 with user2\n          ,\n          children: \"Add Relationship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: relationships.filter(relationship => relationship.user1 === user.id || relationship.user2 === user.id).map(relationship => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Relationship with\", ' ', relationship.user1 === user.id ? relationship.user2 : relationship.user1, \": \", relationship.relationship]\n          }, relationship.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Relationships, \"/aayRTDKdhR8PeW9O7Fe9H6ij9s=\");\n_c = Relationships;\nexport default Relationships;\nvar _c;\n$RefreshReg$(_c, \"Relationships\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Relationships","_s","users","setUsers","relationships","setRelationships","fetchUsers","fetchRelationships","response","get","data","handleRelationship","user1Id","user2Id","relationship","payload","user1","user2","console","log","post","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","email","onClick","id","filter","_c","$RefreshReg$"],"sources":["E:/MY_STUFF/web_pages_practice/junk/User relationship App/FrontEnd/src/components/Relationships.js"],"sourcesContent":["// components/Relationships.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Relationships = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [relationships, setRelationships] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n        fetchRelationships();\r\n    }, []);\r\n\r\n    const fetchUsers = async () => {\r\n        const response = await axios.get('http://localhost:8000/users/');\r\n        setUsers(response.data);\r\n    };\r\n\r\n    const fetchRelationships = async () => {\r\n        const response = await axios.get('http://localhost:8000/relationships/');\r\n        setRelationships(response.data);\r\n    };\r\n\r\n    const handleRelationship = async (user1Id, user2Id, relationship) => {\r\n        const payload = {\r\n            user1: user1Id,\r\n            user2: user2Id,\r\n            relationship,\r\n        };\r\n    \r\n        console.log(\"Sending payload:\", payload); // Debug log\r\n    \r\n        try {\r\n            await axios.post('http://localhost:8000/relationships/', payload);\r\n            fetchRelationships(); // Refresh relationships after successful POST\r\n        } catch (error) {\r\n            console.error(\"Error creating relationship:\", error.response.data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            <ul>\r\n                {users.map((user) => (\r\n                    <li key={user.id}>\r\n                        {user.name} - {user.email}\r\n                        <button\r\n                            onClick={() =>\r\n                                handleRelationship(user.id, 2, 'friend') // Example: user1 with user2\r\n                            }\r\n                        >\r\n                            Add Relationship\r\n                        </button>\r\n                        <ul>\r\n                            {relationships\r\n                                .filter(\r\n                                    (relationship) =>\r\n                                        relationship.user1 === user.id ||\r\n                                        relationship.user2 === user.id\r\n                                )\r\n                                .map((relationship) => (\r\n                                    <li key={relationship.id}>\r\n                                        Relationship with{' '}\r\n                                        {relationship.user1 === user.id\r\n                                            ? relationship.user2\r\n                                            : relationship.user1}\r\n                                        : {relationship.relationship}\r\n                                    </li>\r\n                                ))}\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Relationships;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}