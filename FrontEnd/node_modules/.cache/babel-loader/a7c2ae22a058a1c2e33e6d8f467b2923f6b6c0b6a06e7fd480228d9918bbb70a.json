{"ast":null,"code":"var _jsxFileName = \"E:\\\\MY_STUFF\\\\web_pages_practice\\\\junk\\\\User relationship App\\\\FrontEnd\\\\src\\\\components\\\\Relationships.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relationships = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [relationships, setRelationships] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null); // For selecting user2\n\n  useEffect(() => {\n    fetchUsers();\n    fetchRelationships();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/users/');\n      setUsers(response.data);\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n  const fetchRelationships = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/relationships/');\n      setRelationships(response.data);\n    } catch (error) {\n      console.error(\"Error fetching relationships:\", error);\n    }\n  };\n  const handleRelationship = async (user1Id, user2Id, relationshipType) => {\n    const payload = {\n      user1: user1Id,\n      user2: user2Id,\n      relationship_type: relationshipType // Match the Django model field\n    };\n    console.log(\"Sending payload:\", payload); // Debug log\n\n    try {\n      await axios.post('http://localhost:8000/relationships/', payload);\n      fetchRelationships(); // Refresh relationships after successful POST\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error creating relationship:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" - \", user.email, /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSelectedUser(e.target.value),\n          value: selectedUser || '',\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), users.filter(u => u.id !== user.id) // Exclude current user\n          .map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            children: u.name\n          }, u.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRelationship(user.id, selectedUser, 'friend'),\n          disabled: !selectedUser // Disable if no user is selected\n          ,\n          children: \"Add Relationship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: relationships.filter(relationship => relationship.user1 === user.id || relationship.user2 === user.id).map(relationship => {\n            var _users$find, _users$find2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Relationship with\", ' ', relationship.user1 === user.id ? (_users$find = users.find(u => u.id === relationship.user2)) === null || _users$find === void 0 ? void 0 : _users$find.name : (_users$find2 = users.find(u => u.id === relationship.user1)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name, \": \", relationship.relationship_type]\n            }, relationship.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Relationships, \"fS0vpPMFwMZvwsBrzuPzhepmYNw=\");\n_c = Relationships;\nexport default Relationships;\nvar _c;\n$RefreshReg$(_c, \"Relationships\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Relationships","_s","users","setUsers","relationships","setRelationships","selectedUser","setSelectedUser","fetchUsers","fetchRelationships","response","get","data","error","console","handleRelationship","user1Id","user2Id","relationshipType","payload","user1","user2","relationship_type","log","post","_error$response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","email","onChange","e","target","value","disabled","filter","u","id","onClick","relationship","_users$find","_users$find2","find","_c","$RefreshReg$"],"sources":["E:/MY_STUFF/web_pages_practice/junk/User relationship App/FrontEnd/src/components/Relationships.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Relationships = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [relationships, setRelationships] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null); // For selecting user2\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n        fetchRelationships();\r\n    }, []);\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/users/');\r\n            setUsers(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching users:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchRelationships = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8000/relationships/');\r\n            setRelationships(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching relationships:\", error);\r\n        }\r\n    };\r\n\r\n    const handleRelationship = async (user1Id, user2Id, relationshipType) => {\r\n        const payload = {\r\n            user1: user1Id,\r\n            user2: user2Id,\r\n            relationship_type: relationshipType, // Match the Django model field\r\n        };\r\n\r\n        console.log(\"Sending payload:\", payload); // Debug log\r\n\r\n        try {\r\n            await axios.post('http://localhost:8000/relationships/', payload);\r\n            fetchRelationships(); // Refresh relationships after successful POST\r\n        } catch (error) {\r\n            console.error(\"Error creating relationship:\", error.response?.data || error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            <ul>\r\n                {users.map((user) => (\r\n                    <li key={user.id}>\r\n                        {user.name} - {user.email}\r\n                        <select\r\n                            onChange={(e) => setSelectedUser(e.target.value)}\r\n                            value={selectedUser || ''}\r\n                        >\r\n                            <option value=\"\" disabled>\r\n                                Select user\r\n                            </option>\r\n                            {users\r\n                                .filter((u) => u.id !== user.id) // Exclude current user\r\n                                .map((u) => (\r\n                                    <option key={u.id} value={u.id}>\r\n                                        {u.name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                        <button\r\n                            onClick={() =>\r\n                                handleRelationship(user.id, selectedUser, 'friend')\r\n                            }\r\n                            disabled={!selectedUser} // Disable if no user is selected\r\n                        >\r\n                            Add Relationship\r\n                        </button>\r\n                        <ul>\r\n                            {relationships\r\n                                .filter(\r\n                                    (relationship) =>\r\n                                        relationship.user1 === user.id ||\r\n                                        relationship.user2 === user.id\r\n                                )\r\n                                .map((relationship) => (\r\n                                    <li key={relationship.id}>\r\n                                        Relationship with{' '}\r\n                                        {relationship.user1 === user.id\r\n                                            ? users.find((u) => u.id === relationship.user2)?.name\r\n                                            : users.find((u) => u.id === relationship.user1)?.name}\r\n                                        : {relationship.relationship_type}\r\n                                    </li>\r\n                                ))}\r\n                        </ul>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Relationships;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}